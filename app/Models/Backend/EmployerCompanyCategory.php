<?php

namespace App\Models\Backend;

use App\Models\Scopes\Searchable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class EmployerCompanyCategory extends Model
{
    use HasFactory;
    use Searchable;

    protected $fillable = ['category_name', 'note', 'slug', 'status'];

    protected $searchableFields = ['*'];

    protected $table = 'employer_company_categories';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($employerCompanyCategory) {
            // Delete all related employer companies
//            if ($employerCompanyCategory->employerCompanies()->count() > 0) {
//                // Optionally, you can handle the deletion of related companies here
//                // For example, you might want to log this action or perform additional checks
//                $employerCompanyCategory->employerCompanies()->delete();
//            }
        });
    }

    public static function createOrUpdateEmployerCompanyCategory($request, $employerCompanyCategory = null)
    {
        if (!$employerCompanyCategory) {
            $employerCompanyCategory = new self();
        }
        $employerCompanyCategory->category_name = $request->category_name;
        $employerCompanyCategory->note = $request->note;
        $employerCompanyCategory->status = $request->status == 'on' ? 1 : 0;
        $employerCompanyCategory->slug = str_replace(' ', '-', $request->category_name);
        $employerCompanyCategory->save();
        return $employerCompanyCategory;
    }

    public function employerCompanies()
    {
        return $this->hasMany(EmployerCompany::class);
    }
}
