<?php

namespace App\Models\Backend;

use App\Helpers\ViewHelper;
use App\Models\Scopes\Searchable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use function Pest\Laravel\post;

class Post extends Model
{
    use HasFactory;
    use Searchable;

    protected $fillable = [
        'user_id',
        'title',
        'images',
        'description',
        'status',
        'total_view',
        'user_type',
    ];

    protected $searchableFields = ['*'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::deleting(function ($post) {
            if (isset($post->images))
            {
                foreach (json_decode($post->images) as $image)
                {
                    if (file_exists($image))
                    {
                        unlink($image);
                    }
                }
            }
            if (count($post->postViewers) > 0)
            {
                $post->postViewers->each->delete();
            }
        });
    }


    public static function updateOrCreatePost($request, $post = null)
    {
        if (!$post)
        {
            $post = new Post();
        }
        $loggedUser  = ViewHelper::loggedUser();
        $post->user_id = $loggedUser->id;
        $post->title = $request->title;
        if ($request->has('images'))
            $post->images = ViewHelper::saveImagePathInJson($request->file('images'), 'post-image', 'post', 600, 500, $post->images ?? null);
        $post->description = $request->description;
        $post->status = $request->status == 'on' ? 1 : 0;
        $post->user_type = $loggedUser->user_type;
        $post->save();
        return $post;

    }

    public function postViewers()
    {
        return $this->hasMany(PostViewer::class);
    }
}
